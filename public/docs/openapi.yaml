openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/general-setting:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\Gsetting] 1'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\Gsetting] 1'
      tags:
        - Endpoints
      security: []
  /api/social-setting:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\Ssetting] 1'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\Ssetting] 1'
      tags:
        - Endpoints
      security: []
  /api/logos:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\Logo] 1'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\Logo] 1'
      tags:
        - Endpoints
      security: []
  /api/hot-deal-products:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Hot deal products found successfully!'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Hot deal products found successfully!'
                  data:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
  /api/featured-products:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Featured products found successfully!'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Featured products found successfully!'
                  data:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
  /api/latest-products:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Latest products found successfully!'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Latest products found successfully!'
                  data:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
  /api/popular-products:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Popular products found successfully!'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Popular products found successfully!'
                  data:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
  /api/mens-collection-products:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Mens collection products found successfully!'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Mens collection products found successfully!'
                  data:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
  /api/womens-collection-products:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Womens collection products found successfully!'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Womens collection products found successfully!'
                  data:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
  /api/bags-and-laugages-products:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Bags and laugages products found successfully!'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Bags and laugages products found successfully!'
                  data:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
  /api/recently-viewed-products:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Recently Viewed Products found successfully!'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Recently Viewed Products found successfully!'
                  data:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
  '/api/search/products/{category_id}':
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sorting:
                  type: string
                  description: ''
                  example: null
                min_price:
                  type: number
                  description: ''
                  example: 894547.3911799
                max_price:
                  type: number
                  description: ''
                  example: 5.27428
                searchTerm:
                  type: string
                  description: ''
                  example: null
              required:
                - min_price
                - max_price
      security: []
    parameters:
      -
        in: path
        name: category_id
        description: 'The ID of the category.'
        example: 6
        required: true
        schema:
          type: integer
  '/api/products/{product_slug}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Attempt to read property "id" on null'
                properties:
                  message:
                    type: string
                    example: 'Attempt to read property "id" on null'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: product_slug
        description: 'The slug of the product.'
        example: 10
        required: true
        schema:
          type: integer
  '/api/products/reviews/{product_slug}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Call to a member function OrderItem() on null'
                  exception: Error
                  file: 'C:\xampp\htdocs\dkten-project\app\Http\Controllers\Api\Frontend\FrontendController.php'
                  line: 263
                  trace:
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Routing\Controller.php'
                      line: 54
                      function: getProductReview
                      class: App\Http\Controllers\Api\Frontend\FrontendController
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Routing\ControllerDispatcher.php'
                      line: 45
                      function: callAction
                      class: Illuminate\Routing\Controller
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                      line: 262
                      function: dispatch
                      class: Illuminate\Routing\ControllerDispatcher
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                      line: 205
                      function: runController
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 695
                      function: run
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 128
                      function: 'Illuminate\Routing\{closure}'
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php'
                      line: 50
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 167
                      function: handle
                      class: Illuminate\Routing\Middleware\SubstituteBindings
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php'
                      line: 127
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php'
                      line: 103
                      function: handleRequest
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php'
                      line: 55
                      function: handleRequestUsingNamedLimiter
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 167
                      function: handle
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\View\Middleware\ShareErrorsFromSession.php'
                      line: 49
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 167
                      function: handle
                      class: Illuminate\View\Middleware\ShareErrorsFromSession
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Session\Middleware\StartSession.php'
                      line: 121
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Session\Middleware\StartSession.php'
                      line: 64
                      function: handleStatefulRequest
                      class: Illuminate\Session\Middleware\StartSession
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 167
                      function: handle
                      class: Illuminate\Session\Middleware\StartSession
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\sanctum\src\Http\Middleware\EnsureFrontendRequestsAreStateful.php'
                      line: 33
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 128
                      function: 'Laravel\Sanctum\Http\Middleware\{closure}'
                      class: Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 103
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\sanctum\src\Http\Middleware\EnsureFrontendRequestsAreStateful.php'
                      line: 34
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 167
                      function: handle
                      class: Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse.php'
                      line: 37
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 167
                      function: handle
                      class: Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Cookie\Middleware\EncryptCookies.php'
                      line: 67
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 167
                      function: handle
                      class: Illuminate\Cookie\Middleware\EncryptCookies
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 103
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 697
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 672
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 636
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 625
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 167
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 128
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\livewire\livewire\src\DisableBrowserCache.php'
                      line: 19
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 167
                      function: handle
                      class: Livewire\DisableBrowserCache
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 167
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                      line: 40
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 167
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ValidatePostSize.php'
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 167
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                      line: 86
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 167
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\fruitcake\laravel-cors\src\HandleCors.php'
                      line: 52
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 167
                      function: handle
                      class: Fruitcake\Cors\HandleCors
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                      line: 39
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 167
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 103
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 142
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 111
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 299
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 287
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 89
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 45
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 222
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 179
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 116
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 123
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 80
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 56
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                      line: 55
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                      line: 40
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 37
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 653
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 136
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\symfony\console\Command\Command.php'
                      line: 298
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 121
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\symfony\console\Application.php'
                      line: 1005
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\symfony\console\Application.php'
                      line: 299
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\symfony\console\Application.php'
                      line: 171
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Console\Application.php'
                      line: 94
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                      line: 129
                      function: run
                      class: Illuminate\Console\Application
                      type: '->'
                    -
                      file: 'C:\xampp\htdocs\dkten-project\artisan'
                      line: 37
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: 'Call to a member function OrderItem() on null'
                  exception:
                    type: string
                    example: Error
                  file:
                    type: string
                    example: 'C:\xampp\htdocs\dkten-project\app\Http\Controllers\Api\Frontend\FrontendController.php'
                  line:
                    type: integer
                    example: 263
                  trace:
                    type: array
                    example:
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Routing\Controller.php'
                        line: 54
                        function: getProductReview
                        class: App\Http\Controllers\Api\Frontend\FrontendController
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Routing\ControllerDispatcher.php'
                        line: 45
                        function: callAction
                        class: Illuminate\Routing\Controller
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                        line: 262
                        function: dispatch
                        class: Illuminate\Routing\ControllerDispatcher
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                        line: 205
                        function: runController
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 695
                        function: run
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 128
                        function: 'Illuminate\Routing\{closure}'
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php'
                        line: 50
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 167
                        function: handle
                        class: Illuminate\Routing\Middleware\SubstituteBindings
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php'
                        line: 127
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php'
                        line: 103
                        function: handleRequest
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php'
                        line: 55
                        function: handleRequestUsingNamedLimiter
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 167
                        function: handle
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\View\Middleware\ShareErrorsFromSession.php'
                        line: 49
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 167
                        function: handle
                        class: Illuminate\View\Middleware\ShareErrorsFromSession
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Session\Middleware\StartSession.php'
                        line: 121
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Session\Middleware\StartSession.php'
                        line: 64
                        function: handleStatefulRequest
                        class: Illuminate\Session\Middleware\StartSession
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 167
                        function: handle
                        class: Illuminate\Session\Middleware\StartSession
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\sanctum\src\Http\Middleware\EnsureFrontendRequestsAreStateful.php'
                        line: 33
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 128
                        function: 'Laravel\Sanctum\Http\Middleware\{closure}'
                        class: Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 103
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\sanctum\src\Http\Middleware\EnsureFrontendRequestsAreStateful.php'
                        line: 34
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 167
                        function: handle
                        class: Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse.php'
                        line: 37
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 167
                        function: handle
                        class: Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Cookie\Middleware\EncryptCookies.php'
                        line: 67
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 167
                        function: handle
                        class: Illuminate\Cookie\Middleware\EncryptCookies
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 103
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 697
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 672
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 636
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 625
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 167
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 128
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\livewire\livewire\src\DisableBrowserCache.php'
                        line: 19
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 167
                        function: handle
                        class: Livewire\DisableBrowserCache
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 167
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                        line: 40
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 167
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ValidatePostSize.php'
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 167
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                        line: 86
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 167
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\fruitcake\laravel-cors\src\HandleCors.php'
                        line: 52
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 167
                        function: handle
                        class: Fruitcake\Cors\HandleCors
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                        line: 39
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 167
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 103
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 142
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 111
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 299
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 287
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 89
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 45
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 222
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 179
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 116
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 123
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 80
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 56
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                        line: 55
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                        line: 40
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 37
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 653
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 136
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\symfony\console\Command\Command.php'
                        line: 298
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 121
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\symfony\console\Application.php'
                        line: 1005
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\symfony\console\Application.php'
                        line: 299
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\symfony\console\Application.php'
                        line: 171
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Console\Application.php'
                        line: 94
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                        line: 129
                        function: run
                        class: Illuminate\Console\Application
                        type: '->'
                      -
                        file: 'C:\xampp\htdocs\dkten-project\artisan'
                        line: 37
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: product_slug
        description: 'The slug of the product.'
        example: 9
        required: true
        schema:
          type: integer
  '/api/products/stock-status/{product_slug}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Attempt to read property "id" on null'
                properties:
                  message:
                    type: string
                    example: 'Attempt to read property "id" on null'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: product_slug
        description: 'The slug of the product.'
        example: omnis
        required: true
        schema:
          type: string
  /api/vendor-categories:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Vendor categories found sucessfully!'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Vendor categories found sucessfully!'
                  data:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
  '/api/vendor-categories/{category_id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Vendor types found sucessfully!'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Vendor types found sucessfully!'
                  data:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: category_id
        description: 'The ID of the category.'
        example: praesentium
        required: true
        schema:
          type: string
  '/api/vendor-categories/{category_id}/{type_id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Vendors found Sucessfully'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Vendors found Sucessfully'
                  data:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: category_id
        description: 'The ID of the category.'
        example: facere
        required: true
        schema:
          type: string
      -
        in: path
        name: type_id
        description: 'The ID of the type.'
        example: et
        required: true
        schema:
          type: string
  /api/vendors:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Vendors found sucessfully!'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Vendors found sucessfully!'
                  data:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
  '/api/vendors/{display_name}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Vendor detail found sucessfully!'
                  data: null
                properties:
                  message:
                    type: string
                    example: 'Vendor detail found sucessfully!'
                  data:
                    type: string
                    example: null
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: display_name
        description: ''
        example: 16
        required: true
        schema:
          type: integer
  /api/categories:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Categories found sucessfully'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Categories found sucessfully'
                  data:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
  /api/women-categories:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Categories found sucessfully!'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Categories found sucessfully!'
                  data:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
  /api/legalities:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\Legality] 1'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\Legality] 1'
      tags:
        - Endpoints
      security: []
  /api/contact:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: earum
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: paula.bartoletti@example.net
                subject:
                  type: string
                  description: ''
                  example: eveniet
                message:
                  type: string
                  description: ''
                  example: saepe
              required:
                - name
                - email
                - subject
                - message
      security: []
  /api/faqs:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Faqs found sucessfully!'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Faqs found sucessfully!'
                  data:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
  /api/payment-methods:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Payment methods found sucessfully!'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Payment methods found sucessfully!'
                  data:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
  /api/sliders:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Sliders found sucessfully!'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Sliders found sucessfully!'
                  data:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
  /api/shipping/regions:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Regions found sucessfully!'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Regions found sucessfully!'
                  data:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
  '/api/shipping/cities/{region_id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Cities found sucessfully!'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Cities found sucessfully!'
                  data:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: region_id
        description: 'The ID of the region.'
        example: 19
        required: true
        schema:
          type: integer
  '/api/shipping/areas/{region_id}/{city_id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Areas found sucessfully!'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Areas found sucessfully!'
                  data:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: region_id
        description: 'The ID of the region.'
        example: 16
        required: true
        schema:
          type: integer
      -
        in: path
        name: city_id
        description: 'The ID of the city.'
        example: velit
        required: true
        schema:
          type: string
  /api/user/login:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: ortiz.jevon@example.net
                password:
                  type: string
                  description: 'Must be at least 5 characters.'
                  example: em
                remember_me:
                  type: boolean
                  description: ''
                  example: true
              required:
                - email
                - password
                - remember_me
      security: []
  /api/user/register:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: ''
                  example: explicabo
                last_name:
                  type: string
                  description: ''
                  example: nisi
                email:
                  type: string
                  description: ''
                  example: et
                password_confirmation:
                  type: string
                  description: ''
                  example: dolorum
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: kzbihf
                line1:
                  type: string
                  description: ''
                  example: possimus
                line2:
                  type: string
                  description: ''
                  example: quisquam
                city:
                  type: string
                  description: ''
                  example: voluptas
                state:
                  type: string
                  description: ''
                  example: iure
                country:
                  type: string
                  description: ''
                  example: neque
                zip:
                  type: string
                  description: ''
                  example: minus
                phone:
                  type: number
                  description: ''
                  example: 1.5
              required:
                - first_name
                - last_name
                - email
                - password_confirmation
                - password
                - line1
                - line2
                - city
                - state
                - country
                - zip
                - phone
      security: []
  /api/user/forget-password/confirm-email:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: yweimann@example.net
              required:
                - email
      security: []
  /api/user/forget-password/set-password:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: hweissnat@example.net
                token:
                  type: string
                  description: ''
                  example: quia
                password:
                  type: string
                  description: 'Must be at least 6 characters. Must not be greater than 20 characters.'
                  example: d
                password_confirmation:
                  type: string
                  description: ''
                  example: magni
              required:
                - email
                - token
                - password
                - password_confirmation
      security: []
  /api/user/logout:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/user/profile:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/user/profile/update:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: ''
                  example: eum
                last_name:
                  type: string
                  description: ''
                  example: totam
                email:
                  type: string
                  description: ''
                  example: null
                phone:
                  type: number
                  description: ''
                  example: 2.356624361
                line1:
                  type: string
                  description: ''
                  example: quo
                line2:
                  type: string
                  description: ''
                  example: magni
                city:
                  type: string
                  description: ''
                  example: eligendi
                state:
                  type: string
                  description: ''
                  example: expedita
                country:
                  type: string
                  description: ''
                  example: consequatur
                zip:
                  type: number
                  description: ''
                  example: 2.0
              required:
                - first_name
                - last_name
                - phone
                - line1
                - line2
                - city
                - state
                - country
                - zip
      security: []
  /api/user/password/update:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                current_password:
                  type: string
                  description: ''
                  example: quis
                password:
                  type: string
                  description: 'The value and <code>current_password</code> must be different. Must be at least 8 characters.'
                  example: mb
              required:
                - current_password
                - password
      security: []
  /api/user/image/update:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  description: ''
                  example: dolor
              required:
                - image
      security: []
  /api/user/store-to-cart:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: integer
                  description: ''
                  example: 11
                product_title:
                  type: string
                  description: ''
                  example: repudiandae
                quantity:
                  type: string
                  description: 'Must be at least 1 characters.'
                  example: k
                product_price:
                  type: number
                  description: ''
                  example: 17159.96
                product_attributes:
                  type: array
                  description: ''
                  example:
                    - voluptatem
                  items:
                    type: string
              required:
                - product_id
                - product_title
                - quantity
                - product_price
                - product_attributes
      security: []
  /api/user/store-to-wishlist:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: integer
                  description: ''
                  example: 1
                product_title:
                  type: string
                  description: ''
                  example: quisquam
                product_price:
                  type: number
                  description: ''
                  example: 17.38884327
              required:
                - product_id
                - product_title
                - product_price
      security: []
  /api/user/store-to-compare:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: integer
                  description: ''
                  example: 8
                product_title:
                  type: string
                  description: ''
                  example: repudiandae
                product_price:
                  type: number
                  description: ''
                  example: 3333344.54
              required:
                - product_id
                - product_title
                - product_price
      security: []
  /api/user/cart:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/user/wishlist:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/user/compare:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/user/cart/increase-quantity:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: string
                  description: ''
                  example: sunt
              required:
                - item_id
      security: []
  /api/user/cart/decrease-quantity:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: string
                  description: ''
                  example: voluptates
              required:
                - item_id
      security: []
  /api/user/cart/remove:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: string
                  description: ''
                  example: delectus
              required:
                - item_id
      security: []
  /api/user/wishlist/remove:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: string
                  description: ''
                  example: explicabo
              required:
                - item_id
      security: []
  /api/user/compare/remove:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: string
                  description: ''
                  example: dolor
              required:
                - item_id
      security: []
  /api/user/admin-tickets:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/user/admin-tickets/store:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subject:
                  type: string
                  description: ''
                  example: sunt
                message:
                  type: string
                  description: ''
                  example: inventore
              required:
                - subject
                - message
      security: []
  '/api/user/admin-tickets/{ticket_id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: ''
                  example: in
              required:
                - message
      security: []
    parameters:
      -
        in: path
        name: ticket_id
        description: 'The ID of the ticket.'
        example: cumque
        required: true
        schema:
          type: string
  /api/user/vendor-tickets:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/user/vendor-tickets/store:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vendor_id:
                  type: integer
                  description: ''
                  example: 15
                subject:
                  type: string
                  description: ''
                  example: et
                message:
                  type: string
                  description: ''
                  example: accusamus
              required:
                - vendor_id
                - subject
                - message
      security: []
  '/api/user/vendor-tickets/{ticket_id}/{vendor_id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: ''
                  example: accusamus
              required:
                - message
      security: []
    parameters:
      -
        in: path
        name: ticket_id
        description: 'The ID of the ticket.'
        example: dignissimos
        required: true
        schema:
          type: string
      -
        in: path
        name: vendor_id
        description: 'The ID of the vendor.'
        example: sunt
        required: true
        schema:
          type: string
  /api/user/orders:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/user/orders/{sale_code}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: sale_code
        description: ''
        example: 8
        required: true
        schema:
          type: integer
  /api/user/orders/cancel-order:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sale_code:
                  type: number
                  description: ''
                  example: 55376.8576
              required:
                - sale_code
      security: []
  '/api/user/orders/payment/{sale_code}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: sale_code
        description: ''
        example: 13
        required: true
        schema:
          type: integer
  /api/user/orders/review:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_item_id:
                  type: number
                  description: ''
                  example: 879.0
                rating:
                  type: number
                  description: ''
                  example: 2554.5
                comment:
                  type: string
                  description: ''
                  example: labore
              required:
                - order_item_id
                - rating
                - comment
      security: []
  /api/user/reffer:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: freeman06@example.org
                code:
                  type: string
                  description: ''
                  example: illo
              required:
                - email
                - code
      security: []
  /api/user/load-wallet/verify-email:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  description: ''
                  example: 713.5409169
                method:
                  type: string
                  description: ''
                  example: dicta
              required:
                - amount
                - method
      security: []
  /api/user/load-wallet/verify-otp:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                otp:
                  type: integer
                  description: 'Must be 6 digits.'
                  example: 3
              required:
                - otp
      security: []
  /api/user/apply-coupon:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                coupon_code:
                  type: string
                  description: ''
                  example: est
              required:
                - coupon_code
      security: []
  /api/user/checkout-amount:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/user/proceed-to-checkout:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: ''
                  example: in
                last_name:
                  type: string
                  description: ''
                  example: sapiente
                phone:
                  type: number
                  description: ''
                  example: 1235.853
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: johnston.carmelo@example.org
                line1:
                  type: string
                  description: ''
                  example: cumque
                line2:
                  type: string
                  description: ''
                  example: molestiae
                zip:
                  type: number
                  description: ''
                  example: 8.7645505
                region_id:
                  type: integer
                  description: ''
                  example: 15
                city_id:
                  type: integer
                  description: ''
                  example: 9
                area_id:
                  type: integer
                  description: ''
                  example: 1
                payment_mode_id:
                  type: integer
                  description: ''
                  example: 19
              required:
                - first_name
                - last_name
                - phone
                - email
                - line1
                - line2
                - zip
                - region_id
                - city_id
                - area_id
                - payment_mode_id
      security: []
  /api/user/proceed-to-checkout/esewa-verify:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/vendor/login:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: cade26@example.net
                password:
                  type: string
                  description: 'Must be at least 5 characters.'
                  example: uh
                remember_me:
                  type: boolean
                  description: ''
                  example: false
              required:
                - email
                - password
                - remember_me
      security: []
  /api/vendor/register:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vcategory_id:
                  type: integer
                  description: ''
                  example: 18
                vtype_id:
                  type: integer
                  description: ''
                  example: 16
                name:
                  type: string
                  description: ''
                  example: quisquam
                email:
                  type: string
                  description: ''
                  example: eum
                display_name:
                  type: string
                  description: ''
                  example: quia
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: uqor
                line1:
                  type: string
                  description: ''
                  example: aut
                line2:
                  type: string
                  description: ''
                  example: modi
                city:
                  type: string
                  description: ''
                  example: quia
                state:
                  type: string
                  description: ''
                  example: aliquam
                country:
                  type: string
                  description: ''
                  example: similique
                zip:
                  type: string
                  description: ''
                  example: excepturi
              required:
                - vcategory_id
                - vtype_id
                - name
                - email
                - display_name
                - password
                - line1
                - line2
                - city
                - state
                - country
                - zip
      security: []
  /api/vendor/forget-password/confirm-email:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: mohr.edd@example.org
              required:
                - email
      security: []
  /api/vendor/forget-password/set-password:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: eusebio67@example.com
                token:
                  type: string
                  description: ''
                  example: eaque
                password:
                  type: string
                  description: 'Must be at least 6 characters. Must not be greater than 20 characters.'
                  example: crsudeepgcyvrlr
                password_confirmation:
                  type: string
                  description: ''
                  example: vero
              required:
                - email
                - token
                - password
                - password_confirmation
      security: []
  /api/vendor/logout:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/vendor/profile:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/vendor/profile-update:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: molestiae
                display_name:
                  type: string
                  description: ''
                  example: omnis
                email:
                  type: string
                  description: ''
                  example: null
                line1:
                  type: string
                  description: ''
                  example: quam
                line2:
                  type: string
                  description: ''
                  example: repellat
                city:
                  type: string
                  description: ''
                  example: quo
                state:
                  type: string
                  description: ''
                  example: maxime
                country:
                  type: string
                  description: ''
                  example: numquam
                zip:
                  type: string
                  description: ''
                  example: aut
              required:
                - name
                - display_name
                - line1
                - line2
                - city
                - state
                - country
                - zip
      security: []
  /api/vendor/password-update:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                current_password:
                  type: string
                  description: ''
                  example: accusantium
                password:
                  type: string
                  description: 'The value and <code>current_password</code> must be different. Must be at least 8 characters.'
                  example: pbjg
              required:
                - current_password
                - password
      security: []
  /api/vendor/seo-setting-update:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                keywords:
                  type: string
                  description: ''
                  example: exercitationem
                seo_title:
                  type: string
                  description: ''
                  example: error
                seo_description:
                  type: string
                  description: ''
                  example: et
              required:
                - keywords
                - seo_title
                - seo_description
      security: []
  /api/vendor/social-setting-update:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                facebook:
                  type: string
                  description: ''
                  example: null
                instagram:
                  type: string
                  description: ''
                  example: null
                twitter:
                  type: string
                  description: ''
                  example: null
                google:
                  type: string
                  description: ''
                  example: null
                youtube:
                  type: string
                  description: ''
                  example: null
                whatsapp:
                  type: string
                  description: ''
                  example: null
      security: []
  /api/vendor/image-setting-update:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/vendor/merchant-update:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                merchant_id:
                  type: string
                  description: ''
                  example: perferendis
              required:
                - merchant_id
      security: []
  /api/vendor/sliders:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/vendor/sliders/store:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                banner_image:
                  type: string
                  description: ''
                  example: impedit
                text:
                  type: string
                  description: ''
                  example: harum
                link:
                  type: string
                  description: ''
                  example: ipsam
                button_color:
                  type: string
                  description: ''
                  example: aut
                text_color:
                  type: string
                  description: ''
                  example: qui
                status:
                  type: boolean
                  description: ''
                  example: true
              required:
                - banner_image
                - text
                - link
                - button_color
                - text_color
                - status
      security: []
  '/api/vendor/sliders/update/{slider_id}':
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: ''
                  example: nihil
                link:
                  type: string
                  description: ''
                  example: quia
                button_color:
                  type: string
                  description: ''
                  example: dolorem
                text_color:
                  type: string
                  description: ''
                  example: autem
                status:
                  type: boolean
                  description: ''
                  example: true
              required:
                - text
                - link
                - button_color
                - text_color
                - status
      security: []
    parameters:
      -
        in: path
        name: slider_id
        description: 'The ID of the slider.'
        example: saepe
        required: true
        schema:
          type: string
  /api/vendor/sliders/update-status:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                slider_id:
                  type: integer
                  description: ''
                  example: 8
              required:
                - slider_id
      security: []
  /api/vendor/sliders/delete:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                slider_id:
                  type: integer
                  description: ''
                  example: 18
              required:
                - slider_id
      security: []
  /api/vendor/tickets:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/vendor/tickets/{ticket_id}/{user_id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: ''
                  example: velit
              required:
                - message
      security: []
    parameters:
      -
        in: path
        name: ticket_id
        description: 'The ID of the ticket.'
        example: quod
        required: true
        schema:
          type: string
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: exercitationem
        required: true
        schema:
          type: string
  /api/vendor/tickets/delete:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ticket_id:
                  type: integer
                  description: ''
                  example: 15
              required:
                - ticket_id
      security: []
  /api/vendor/products:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/vendor/products/add:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: ea
                slug:
                  type: string
                  description: ''
                  example: ipsum
                category_id:
                  type: integer
                  description: ''
                  example: 13
                sub_category_id:
                  type: integer
                  description: ''
                  example: 19
                type_id:
                  type: integer
                  description: ''
                  example: 19
                unit:
                  type: string
                  description: ''
                  example: dolores
                tags:
                  type: string
                  description: ''
                  example: autem
                images:
                  type: string
                  description: ''
                  example: ratione
                description:
                  type: string
                  description: ''
                  example: nemo
                seo_title:
                  type: string
                  description: ''
                  example: eligendi
                seo_description:
                  type: string
                  description: ''
                  example: vel
                sale_price:
                  type: number
                  description: ''
                  example: 22364.9919825
                purchase_price:
                  type: number
                  description: ''
                  example: 17686224.2
                shipping_cost:
                  type: number
                  description: ''
                  example: 196343030.09209
                tax:
                  type: number
                  description: ''
                  example: 584.7953579
                discount:
                  type: number
                  description: ''
                  example: 3464.957781
                brand_id:
                  type: integer
                  description: ''
                  example: 9
              required:
                - title
                - slug
                - category_id
                - sub_category_id
                - type_id
                - unit
                - tags
                - images
                - description
                - seo_title
                - seo_description
                - sale_price
                - purchase_price
                - shipping_cost
                - tax
                - discount
                - brand_id
      security: []
  '/api/vendor/products/edit/{product_id}':
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: vel
                slug:
                  type: string
                  description: ''
                  example: null
                category_id:
                  type: integer
                  description: ''
                  example: 7
                sub_category_id:
                  type: integer
                  description: ''
                  example: 16
                type_id:
                  type: integer
                  description: ''
                  example: 19
                unit:
                  type: string
                  description: ''
                  example: accusantium
                tags:
                  type: string
                  description: ''
                  example: consequuntur
                description:
                  type: string
                  description: ''
                  example: facere
                seo_title:
                  type: string
                  description: ''
                  example: null
                seo_description:
                  type: string
                  description: ''
                  example: atque
                sale_price:
                  type: number
                  description: ''
                  example: 92501.7
                purchase_price:
                  type: number
                  description: ''
                  example: 4568938.0
                shipping_cost:
                  type: number
                  description: ''
                  example: 165815.51950982
                tax:
                  type: number
                  description: ''
                  example: 5.24116291
                discount:
                  type: number
                  description: ''
                  example: 688.91773765
                brand_id:
                  type: integer
                  description: ''
                  example: 6
              required:
                - title
                - category_id
                - sub_category_id
                - type_id
                - unit
                - tags
                - description
                - seo_description
                - sale_price
                - purchase_price
                - shipping_cost
                - tax
                - discount
                - brand_id
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: quis
        required: true
        schema:
          type: string
  /api/vendor/products/update-featured:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: integer
                  description: ''
                  example: 4
              required:
                - product_id
      security: []
  /api/vendor/products/update-status:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: integer
                  description: ''
                  example: 3
              required:
                - product_id
      security: []
  /api/vendor/products/delete:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: integer
                  description: ''
                  example: 12
              required:
                - product_id
      security: []
  /api/vendor/product-stocks:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/vendor/product-stocks/create:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_id:
                  type: integer
                  description: ''
                  example: 6
                product_id:
                  type: integer
                  description: ''
                  example: 1
                sub_category_id:
                  type: integer
                  description: ''
                  example: 5
                quantity:
                  type: integer
                  description: ''
                  example: 20
                rate:
                  type: integer
                  description: ''
                  example: 2
                total:
                  type: integer
                  description: ''
                  example: 15
                entry_note:
                  type: string
                  description: ''
                  example: et
              required:
                - category_id
                - product_id
                - sub_category_id
                - quantity
                - rate
                - total
                - entry_note
      security: []
  /api/vendor/product-stocks/destroy:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_id:
                  type: integer
                  description: ''
                  example: 20
                product_id:
                  type: integer
                  description: ''
                  example: 15
                sub_category_id:
                  type: integer
                  description: ''
                  example: 7
                quantity:
                  type: integer
                  description: ''
                  example: 3
                monetary_loss:
                  type: integer
                  description: ''
                  example: 4
                reason_note:
                  type: string
                  description: ''
                  example: nesciunt
              required:
                - category_id
                - product_id
                - sub_category_id
                - quantity
                - monetary_loss
                - reason_note
      security: []
  /api/vendor/product-stocks/delete:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                stock_id:
                  type: integer
                  description: ''
                  example: 9
              required:
                - stock_id
      security: []
  /api/vendor/admin-payments:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/vendor/admin-payments/delete:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_id:
                  type: integer
                  description: ''
                  example: 9
              required:
                - payment_id
      security: []
tags:
  -
    name: Endpoints
    description: ''
